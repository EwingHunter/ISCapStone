from flask import Flask, render_template
import certifi
from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi
from collections import Counter

# Set up the MongoDB connection
mongo_connection_string = "mongodb+srv://ewinghunter:Hannah94@iscapstonecluster.5btls.mongodb.net/?retryWrites=true&w=majority"
client = MongoClient(
    mongo_connection_string,
    server_api=ServerApi('1'),
    tlsCAFile=certifi.where()
)

try:
    client.admin.command('ping')
    print("Successfully connected to MongoDB!")
except Exception as e:
    print("MongoDB Connection Error:", e)
    exit(1)

db = client['iscapstone']
collection = db['messages']

# Flask App Initialization
app = Flask(__name__)

# Route: Home Page
@app.route('/')
def home():
    try:
        # Fetch messages
        messages = list(collection.find({}, {
            "_id": 0,
            "TransactionNumber": 1,
            "TransactionDateTime": 1,
            "ItemId": 1,
            "Location": 1,
            "Quantity": 1,
            "Status": 1,
        }))

        # Check for duplicates and add `is_duplicate` flag
        transaction_numbers = [
            msg.get('TransactionNumber') for msg in messages if 'TransactionNumber' in msg
        ]
        counts = Counter(transaction_numbers)
        duplicates = {num for num, count in counts.items() if count > 1}

        for msg in messages:
            msg['is_duplicate'] = msg.get('TransactionNumber') in duplicates

        return render_template('index.html', messages=messages)
    except Exception as e:
        print("Error fetching messages:", e)
        return "Error fetching messages.", 500

if __name__ == "__main__":
    app.run(host='0.0.0.0', port=8080)

